// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomacaoCuponagem.Features.PortalCuponagem
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Cuponagem_Cadastrar Dados do EC")]
    public partial class Cuponagem_CadastrarDadosDoECFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CadastrarDadosEC.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cuponagem_Cadastrar Dados do EC", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1- Validar_Redirecionamento_Tela_Cadastro_do_EC(Via URL)")]
        [NUnit.Framework.CategoryAttribute("web")]
        public virtual void _1_Validar_Redirecionamento_Tela_Cadastro_Do_ECViaURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1- Validar_Redirecionamento_Tela_Cadastro_do_EC(Via URL)", new string[] {
                        "web"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("que faço o login com EC Sem Cadastro do Estabelecimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 7
 testRunner.When("acesso a tela de Cadastro de Promocao via URL", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 8
 testRunner.Then("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2- Validar_Redirecionamento_Tela_Cadastro_do_EC(BotaoCriarPromocao)")]
        [NUnit.Framework.CategoryAttribute("web")]
        public virtual void _2_Validar_Redirecionamento_Tela_Cadastro_Do_ECBotaoCriarPromocao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2- Validar_Redirecionamento_Tela_Cadastro_do_EC(BotaoCriarPromocao)", new string[] {
                        "web"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("que faço o login com EC Sem Cadastro do Estabelecimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 13
 testRunner.When("pressiono no botão Criar Promoção(EC_Sem_Cadastro)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 14
 testRunner.Then("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3-Cadastro_de_EC_(Validar_Campos_Obrigatórios)")]
        [NUnit.Framework.CategoryAttribute("web")]
        public virtual void _3_Cadastro_De_EC_Validar_Campos_Obrigatorios()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3-Cadastro_de_EC_(Validar_Campos_Obrigatórios)", new string[] {
                        "web"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("que faço o login com EC Sem Cadastro do Estabelecimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 19
 testRunner.And("pressiono no botão Criar Promoção(EC_Sem_Cadastro)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.And("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.When("pressiono no botão Prosseguir", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 22
 testRunner.Then("visualizo mensagem de Campos Obrigatórios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("4-Cadastrar_EC(Com_Sucesso)")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.TestCaseAttribute("ABC", "01010001", "123", "bloco b", "Lanches", "Vegetariano", "19", null)]
        public virtual void _4_Cadastrar_ECCom_Sucesso(string nomeFantasia, string cep, string numero, string complemento, string tipoEstabelecimento, string tipoCozinha, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "web"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4-Cadastrar_EC(Com_Sucesso)", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("visualizo a tela Painel de Promocoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
 testRunner.And("pressiono no botão Criar Promoção(EC_Sem_Cadastro)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 28
 testRunner.And("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 29
 testRunner.And(string.Format("preencho os dados do Estabelecimento {0}, {1}, {2}, {3}, {4}, {5}", nomeFantasia, cep, numero, complemento, tipoEstabelecimento, tipoCozinha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 30
 testRunner.And("pressiono no botão Prosseguir", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 31
 testRunner.And(string.Format("preencho os dados da Promocao (Valor) {0}", valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
 testRunner.And("pressiono botão Proximo Passo (Promocao)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
 testRunner.And(string.Format("visualizo dados para confirmacao {0}, {1}, {2}", nomeFantasia, tipoEstabelecimento, tipoCozinha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 34
 testRunner.When("pressiono botão Criar Promocao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 35
 testRunner.Then("visualizo a Mensagem de Confirmacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("5-Confirmar_Cadastro_de_EC")]
        [NUnit.Framework.CategoryAttribute("web")]
        public virtual void _5_Confirmar_Cadastro_De_EC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5-Confirmar_Cadastro_de_EC", new string[] {
                        "web"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("que faço o login com EC Com Cadastro do Estabelecimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 43
 testRunner.When("pressiono no botão Criar Promoção", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 44
 testRunner.Then("visualizo a tela Criar Promocao - Dados da Promocao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("6-Cadastrar_EC_(CEP_Regional)")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.TestCaseAttribute("Comercio da Cidade", "62170000", "Rua José Teodoro", "71", "Centro", "Food Truck", "Brasileiro", "2", null)]
        public virtual void _6_Cadastrar_EC_CEP_Regional(string nomeFantasia, string cep, string endereco, string numero, string bairro, string tipoEstabelecimento, string tipoCozinha, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "web"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("6-Cadastrar_EC_(CEP_Regional)", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("visualizo a tela Painel de Promocoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 49
 testRunner.And("pressiono no botão Criar Promoção(EC_Sem_Cadastro)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 50
 testRunner.And("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 51
 testRunner.And(string.Format("preencho os dados do Estabelecimento. Com CEP Unico {0}, {1}, {2}, {3}, {4} , {5}" +
                        ", {6}", nomeFantasia, cep, endereco, numero, bairro, tipoEstabelecimento, tipoCozinha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 52
 testRunner.And("pressiono no botão Prosseguir", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 53
 testRunner.And(string.Format("preencho os dados da Promocao (Valor) {0}", valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 54
 testRunner.And("pressiono botão Proximo Passo (Promocao)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.And(string.Format("visualizo dados para confirmacao {0}, {1}, {2}", nomeFantasia, tipoEstabelecimento, tipoCozinha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 56
 testRunner.When("pressiono botão Criar Promocao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 57
 testRunner.Then("visualizo a Mensagem de Confirmacao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("7-Cadastrar_EC_(CEP_Invalido)")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.TestCaseAttribute("99999999", null)]
        public virtual void _7_Cadastrar_EC_CEP_Invalido(string cep, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "web"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("7-Cadastrar_EC_(CEP_Invalido)", @__tags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("visualizo a tela Painel de Promocoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 65
 testRunner.And("pressiono no botão Criar Promoção(EC_Sem_Cadastro)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 66
 testRunner.And("sou direcionado para a tela de cadastro de EC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 67
 testRunner.When(string.Format("preencho campo CEP com valor inválido {0}", cep), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 68
 testRunner.Then("visualizo a Mensagem de Cep Inválido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
